//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace PomodoroAssistant
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[29];
            _typeNameTable[0] = "PomodoroAssistant.TabHeader";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[2] = "String";
            _typeNameTable[3] = "PomodoroAssistant.MainPage";
            _typeNameTable[4] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[5] = "Atrx.Mobile.Windows.Pomodoro.Converters.TimeSpanToMinutesStringConverter";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "Atrx.Mobile.Windows.Pomodoro.Converters.TimeSpanToSecondStringConverter";
            _typeNameTable[8] = "Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToStartButtonEnabled";
            _typeNameTable[9] = "Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToPauseButtonEnabled";
            _typeNameTable[10] = "Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToStopButtonEnabled";
            _typeNameTable[11] = "Windows.UI.Text.FontWeight";
            _typeNameTable[12] = "System.ValueType";
            _typeNameTable[13] = "PomodoroAssistant.Views.ReportsPage";
            _typeNameTable[14] = "PomodoroAssistant.ViewsModels.AboutViewModel";
            _typeNameTable[15] = "GalaSoft.MvvmLight.ViewModelBase";
            _typeNameTable[16] = "GalaSoft.MvvmLight.ObservableObject";
            _typeNameTable[17] = "System.Windows.Input.ICommand";
            _typeNameTable[18] = "Boolean";
            _typeNameTable[19] = "PomodoroAssistant.ViewsModels.SettingsViewModel";
            _typeNameTable[20] = "Int32";
            _typeNameTable[21] = "PomodoroAssistant.Views.SettingsPage";
            _typeNameTable[22] = "PomodoroAssistant.Views.TasksPage";
            _typeNameTable[23] = "PomodoroAssistant.ViewModels.TimerViewModel";
            _typeNameTable[24] = "Atrx.Mobile.Windows.Pomodoro.Settings.PomodoroSettings";
            _typeNameTable[25] = "TimeSpan";
            _typeNameTable[26] = "Atrx.Mobile.Windows.Pomodoro.PomodoroTimer.TimerStates";
            _typeNameTable[27] = "System.Enum";
            _typeNameTable[28] = "PomodoroAssistant.Views.TimerPage";

            _typeTable = new global::System.Type[29];
            _typeTable[0] = typeof(global::PomodoroAssistant.TabHeader);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[2] = typeof(global::System.String);
            _typeTable[3] = typeof(global::PomodoroAssistant.MainPage);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[5] = typeof(global::Atrx.Mobile.Windows.Pomodoro.Converters.TimeSpanToMinutesStringConverter);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::Atrx.Mobile.Windows.Pomodoro.Converters.TimeSpanToSecondStringConverter);
            _typeTable[8] = typeof(global::Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToStartButtonEnabled);
            _typeTable[9] = typeof(global::Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToPauseButtonEnabled);
            _typeTable[10] = typeof(global::Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToStopButtonEnabled);
            _typeTable[11] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[12] = typeof(global::System.ValueType);
            _typeTable[13] = typeof(global::PomodoroAssistant.Views.ReportsPage);
            _typeTable[14] = typeof(global::PomodoroAssistant.ViewsModels.AboutViewModel);
            _typeTable[15] = typeof(global::GalaSoft.MvvmLight.ViewModelBase);
            _typeTable[16] = typeof(global::GalaSoft.MvvmLight.ObservableObject);
            _typeTable[17] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[18] = typeof(global::System.Boolean);
            _typeTable[19] = typeof(global::PomodoroAssistant.ViewsModels.SettingsViewModel);
            _typeTable[20] = typeof(global::System.Int32);
            _typeTable[21] = typeof(global::PomodoroAssistant.Views.SettingsPage);
            _typeTable[22] = typeof(global::PomodoroAssistant.Views.TasksPage);
            _typeTable[23] = typeof(global::PomodoroAssistant.ViewModels.TimerViewModel);
            _typeTable[24] = typeof(global::Atrx.Mobile.Windows.Pomodoro.Settings.PomodoroSettings);
            _typeTable[25] = typeof(global::System.TimeSpan);
            _typeTable[26] = typeof(global::Atrx.Mobile.Windows.Pomodoro.PomodoroTimer.TimerStates);
            _typeTable[27] = typeof(global::System.Enum);
            _typeTable[28] = typeof(global::PomodoroAssistant.Views.TimerPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_TabHeader() { return new global::PomodoroAssistant.TabHeader(); }
        private object Activate_3_MainPage() { return new global::PomodoroAssistant.MainPage(); }
        private object Activate_5_TimeSpanToMinutesStringConverter() { return new global::Atrx.Mobile.Windows.Pomodoro.Converters.TimeSpanToMinutesStringConverter(); }
        private object Activate_7_TimeSpanToSecondStringConverter() { return new global::Atrx.Mobile.Windows.Pomodoro.Converters.TimeSpanToSecondStringConverter(); }
        private object Activate_8_TimerStateToStartButtonEnabled() { return new global::Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToStartButtonEnabled(); }
        private object Activate_9_TimerStateToPauseButtonEnabled() { return new global::Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToPauseButtonEnabled(); }
        private object Activate_10_TimerStateToStopButtonEnabled() { return new global::Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToStopButtonEnabled(); }
        private object Activate_13_ReportsPage() { return new global::PomodoroAssistant.Views.ReportsPage(); }
        private object Activate_14_AboutViewModel() { return new global::PomodoroAssistant.ViewsModels.AboutViewModel(); }
        private object Activate_16_ObservableObject() { return new global::GalaSoft.MvvmLight.ObservableObject(); }
        private object Activate_19_SettingsViewModel() { return new global::PomodoroAssistant.ViewsModels.SettingsViewModel(); }
        private object Activate_21_SettingsPage() { return new global::PomodoroAssistant.Views.SettingsPage(); }
        private object Activate_22_TasksPage() { return new global::PomodoroAssistant.Views.TasksPage(); }
        private object Activate_23_TimerViewModel() { return new global::PomodoroAssistant.ViewModels.TimerViewModel(); }
        private object Activate_24_PomodoroSettings() { return new global::Atrx.Mobile.Windows.Pomodoro.Settings.PomodoroSettings(); }
        private object Activate_28_TimerPage() { return new global::PomodoroAssistant.Views.TimerPage(); }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  PomodoroAssistant.TabHeader
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_0_TabHeader;
                userType.AddMemberName("Label");
                userType.AddMemberName("Glyph");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  String
                xamlType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  PomodoroAssistant.MainPage
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_3_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Atrx.Mobile.Windows.Pomodoro.Converters.TimeSpanToMinutesStringConverter
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_TimeSpanToMinutesStringConverter;
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Atrx.Mobile.Windows.Pomodoro.Converters.TimeSpanToSecondStringConverter
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_7_TimeSpanToSecondStringConverter;
                xamlType = userType;
                break;

            case 8:   //  Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToStartButtonEnabled
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_8_TimerStateToStartButtonEnabled;
                xamlType = userType;
                break;

            case 9:   //  Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToPauseButtonEnabled
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_TimerStateToPauseButtonEnabled;
                xamlType = userType;
                break;

            case 10:   //  Atrx.Mobile.Windows.Pomodoro.Converters.TimerStateToStopButtonEnabled
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_TimerStateToStopButtonEnabled;
                xamlType = userType;
                break;

            case 11:   //  Windows.UI.Text.FontWeight
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 12:   //  System.ValueType
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 13:   //  PomodoroAssistant.Views.ReportsPage
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_13_ReportsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  PomodoroAssistant.ViewsModels.AboutViewModel
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_14_AboutViewModel;
                userType.AddMemberName("Version");
                userType.AddMemberName("DamianTwieterCommand");
                userType.AddMemberName("PomodoroTwitterCommand");
                userType.AddMemberName("SendEmailCommand");
                userType.AddMemberName("RateAppCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  GalaSoft.MvvmLight.ViewModelBase
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ObservableObject"));
                userType.AddMemberName("IsInDesignMode");
                xamlType = userType;
                break;

            case 16:   //  GalaSoft.MvvmLight.ObservableObject
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_ObservableObject;
                xamlType = userType;
                break;

            case 17:   //  System.Windows.Input.ICommand
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  Boolean
                xamlType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  PomodoroAssistant.ViewsModels.SettingsViewModel
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_19_SettingsViewModel;
                userType.AddMemberName("WorkDuration");
                userType.AddMemberName("ShortBreakDuration");
                userType.AddMemberName("LongBreakDuration");
                userType.AddMemberName("DailyTarget");
                userType.AddMemberName("PomodorosToLongBreak");
                userType.AddMemberName("IsMuteSound");
                userType.AddMemberName("IsAutoContinue");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Int32
                xamlType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  PomodoroAssistant.Views.SettingsPage
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  PomodoroAssistant.Views.TasksPage
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_22_TasksPage;
                userType.AddMemberName("SectionWidth");
                userType.AddMemberName("SectionHeight");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  PomodoroAssistant.ViewModels.TimerViewModel
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_23_TimerViewModel;
                userType.AddMemberName("CurrentSettings");
                userType.AddMemberName("CurrentTime");
                userType.AddMemberName("CurrentSecond");
                userType.AddMemberName("CurrentMinutes");
                userType.AddMemberName("TotalTime");
                userType.AddMemberName("LongBreakAfter");
                userType.AddMemberName("DailyTarget");
                userType.AddMemberName("PomodoroStateText");
                userType.AddMemberName("CurrentTimerState");
                userType.AddMemberName("TimerStartCommand");
                userType.AddMemberName("TimerPauseCommand");
                userType.AddMemberName("TimerStopCommand");
                userType.AddMemberName("ResetLongBreakAfterCommand");
                userType.AddMemberName("ResetDailyTargetCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Atrx.Mobile.Windows.Pomodoro.Settings.PomodoroSettings
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  TimeSpan
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 26:   //  Atrx.Mobile.Windows.Pomodoro.PomodoroTimer.TimerStates
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Started", global::Atrx.Mobile.Windows.Pomodoro.PomodoroTimer.TimerStates.Started);
                userType.AddEnumValue("Paused", global::Atrx.Mobile.Windows.Pomodoro.PomodoroTimer.TimerStates.Paused);
                userType.AddEnumValue("Stopped", global::Atrx.Mobile.Windows.Pomodoro.PomodoroTimer.TimerStates.Stopped);
                xamlType = userType;
                break;

            case 27:   //  System.Enum
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 28:   //  PomodoroAssistant.Views.TimerPage
                userType = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_TimerPage;
                userType.AddMemberName("SectionWidth");
                userType.AddMemberName("SectionHeight");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_TabHeader_Label(object instance)
        {
            var that = (global::PomodoroAssistant.TabHeader)instance;
            return that.Label;
        }
        private void set_0_TabHeader_Label(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.TabHeader)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_1_TabHeader_Glyph(object instance)
        {
            var that = (global::PomodoroAssistant.TabHeader)instance;
            return that.Glyph;
        }
        private void set_1_TabHeader_Glyph(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.TabHeader)instance;
            that.Glyph = (global::System.String)Value;
        }
        private object get_2_AboutViewModel_Version(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.AboutViewModel)instance;
            return that.Version;
        }
        private object get_3_AboutViewModel_DamianTwieterCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.AboutViewModel)instance;
            return that.DamianTwieterCommand;
        }
        private object get_4_AboutViewModel_PomodoroTwitterCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.AboutViewModel)instance;
            return that.PomodoroTwitterCommand;
        }
        private object get_5_AboutViewModel_SendEmailCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.AboutViewModel)instance;
            return that.SendEmailCommand;
        }
        private object get_6_AboutViewModel_RateAppCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.AboutViewModel)instance;
            return that.RateAppCommand;
        }
        private object get_7_ViewModelBase_IsInDesignMode(object instance)
        {
            var that = (global::GalaSoft.MvvmLight.ViewModelBase)instance;
            return that.IsInDesignMode;
        }
        private object get_8_SettingsViewModel_WorkDuration(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            return that.WorkDuration;
        }
        private void set_8_SettingsViewModel_WorkDuration(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            that.WorkDuration = (global::System.Int32)Value;
        }
        private object get_9_SettingsViewModel_ShortBreakDuration(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            return that.ShortBreakDuration;
        }
        private void set_9_SettingsViewModel_ShortBreakDuration(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            that.ShortBreakDuration = (global::System.Int32)Value;
        }
        private object get_10_SettingsViewModel_LongBreakDuration(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            return that.LongBreakDuration;
        }
        private void set_10_SettingsViewModel_LongBreakDuration(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            that.LongBreakDuration = (global::System.Int32)Value;
        }
        private object get_11_SettingsViewModel_DailyTarget(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            return that.DailyTarget;
        }
        private void set_11_SettingsViewModel_DailyTarget(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            that.DailyTarget = (global::System.Int32)Value;
        }
        private object get_12_SettingsViewModel_PomodorosToLongBreak(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            return that.PomodorosToLongBreak;
        }
        private void set_12_SettingsViewModel_PomodorosToLongBreak(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            that.PomodorosToLongBreak = (global::System.Int32)Value;
        }
        private object get_13_SettingsViewModel_IsMuteSound(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            return that.IsMuteSound;
        }
        private void set_13_SettingsViewModel_IsMuteSound(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            that.IsMuteSound = (global::System.Boolean)Value;
        }
        private object get_14_SettingsViewModel_IsAutoContinue(object instance)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            return that.IsAutoContinue;
        }
        private void set_14_SettingsViewModel_IsAutoContinue(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewsModels.SettingsViewModel)instance;
            that.IsAutoContinue = (global::System.Boolean)Value;
        }
        private object get_15_TasksPage_SectionWidth(object instance)
        {
            var that = (global::PomodoroAssistant.Views.TasksPage)instance;
            return that.SectionWidth;
        }
        private object get_16_TasksPage_SectionHeight(object instance)
        {
            var that = (global::PomodoroAssistant.Views.TasksPage)instance;
            return that.SectionHeight;
        }
        private object get_17_TimerViewModel_CurrentSettings(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.CurrentSettings;
        }
        private object get_18_TimerViewModel_CurrentTime(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.CurrentTime;
        }
        private void set_18_TimerViewModel_CurrentTime(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            that.CurrentTime = (global::System.TimeSpan)Value;
        }
        private object get_19_TimerViewModel_CurrentSecond(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.CurrentSecond;
        }
        private void set_19_TimerViewModel_CurrentSecond(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            that.CurrentSecond = (global::System.String)Value;
        }
        private object get_20_TimerViewModel_CurrentMinutes(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.CurrentMinutes;
        }
        private void set_20_TimerViewModel_CurrentMinutes(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            that.CurrentMinutes = (global::System.String)Value;
        }
        private object get_21_TimerViewModel_TotalTime(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.TotalTime;
        }
        private void set_21_TimerViewModel_TotalTime(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            that.TotalTime = (global::System.TimeSpan)Value;
        }
        private object get_22_TimerViewModel_LongBreakAfter(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.LongBreakAfter;
        }
        private void set_22_TimerViewModel_LongBreakAfter(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            that.LongBreakAfter = (global::System.Int32)Value;
        }
        private object get_23_TimerViewModel_DailyTarget(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.DailyTarget;
        }
        private void set_23_TimerViewModel_DailyTarget(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            that.DailyTarget = (global::System.Int32)Value;
        }
        private object get_24_TimerViewModel_PomodoroStateText(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.PomodoroStateText;
        }
        private void set_24_TimerViewModel_PomodoroStateText(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            that.PomodoroStateText = (global::System.String)Value;
        }
        private object get_25_TimerViewModel_CurrentTimerState(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.CurrentTimerState;
        }
        private void set_25_TimerViewModel_CurrentTimerState(object instance, object Value)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            that.CurrentTimerState = (global::Atrx.Mobile.Windows.Pomodoro.PomodoroTimer.TimerStates)Value;
        }
        private object get_26_TimerViewModel_TimerStartCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.TimerStartCommand;
        }
        private object get_27_TimerViewModel_TimerPauseCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.TimerPauseCommand;
        }
        private object get_28_TimerViewModel_TimerStopCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.TimerStopCommand;
        }
        private object get_29_TimerViewModel_ResetLongBreakAfterCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.ResetLongBreakAfterCommand;
        }
        private object get_30_TimerViewModel_ResetDailyTargetCommand(object instance)
        {
            var that = (global::PomodoroAssistant.ViewModels.TimerViewModel)instance;
            return that.ResetDailyTargetCommand;
        }
        private object get_31_TimerPage_SectionWidth(object instance)
        {
            var that = (global::PomodoroAssistant.Views.TimerPage)instance;
            return that.SectionWidth;
        }
        private object get_32_TimerPage_SectionHeight(object instance)
        {
            var that = (global::PomodoroAssistant.Views.TimerPage)instance;
            return that.SectionHeight;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember xamlMember = null;
            global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "PomodoroAssistant.TabHeader.Label":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.TabHeader");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_TabHeader_Label;
                xamlMember.Setter = set_0_TabHeader_Label;
                break;
            case "PomodoroAssistant.TabHeader.Glyph":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.TabHeader");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "Glyph", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_TabHeader_Glyph;
                xamlMember.Setter = set_1_TabHeader_Glyph;
                break;
            case "PomodoroAssistant.ViewsModels.AboutViewModel.Version":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.AboutViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "Version", "String");
                xamlMember.Getter = get_2_AboutViewModel_Version;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewsModels.AboutViewModel.DamianTwieterCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.AboutViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "DamianTwieterCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_3_AboutViewModel_DamianTwieterCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewsModels.AboutViewModel.PomodoroTwitterCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.AboutViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "PomodoroTwitterCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_4_AboutViewModel_PomodoroTwitterCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewsModels.AboutViewModel.SendEmailCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.AboutViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "SendEmailCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_5_AboutViewModel_SendEmailCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewsModels.AboutViewModel.RateAppCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.AboutViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "RateAppCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_6_AboutViewModel_RateAppCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "GalaSoft.MvvmLight.ViewModelBase.IsInDesignMode":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "IsInDesignMode", "Boolean");
                xamlMember.Getter = get_7_ViewModelBase_IsInDesignMode;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewsModels.SettingsViewModel.WorkDuration":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.SettingsViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "WorkDuration", "Int32");
                xamlMember.Getter = get_8_SettingsViewModel_WorkDuration;
                xamlMember.Setter = set_8_SettingsViewModel_WorkDuration;
                break;
            case "PomodoroAssistant.ViewsModels.SettingsViewModel.ShortBreakDuration":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.SettingsViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "ShortBreakDuration", "Int32");
                xamlMember.Getter = get_9_SettingsViewModel_ShortBreakDuration;
                xamlMember.Setter = set_9_SettingsViewModel_ShortBreakDuration;
                break;
            case "PomodoroAssistant.ViewsModels.SettingsViewModel.LongBreakDuration":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.SettingsViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "LongBreakDuration", "Int32");
                xamlMember.Getter = get_10_SettingsViewModel_LongBreakDuration;
                xamlMember.Setter = set_10_SettingsViewModel_LongBreakDuration;
                break;
            case "PomodoroAssistant.ViewsModels.SettingsViewModel.DailyTarget":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.SettingsViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "DailyTarget", "Int32");
                xamlMember.Getter = get_11_SettingsViewModel_DailyTarget;
                xamlMember.Setter = set_11_SettingsViewModel_DailyTarget;
                break;
            case "PomodoroAssistant.ViewsModels.SettingsViewModel.PomodorosToLongBreak":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.SettingsViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "PomodorosToLongBreak", "Int32");
                xamlMember.Getter = get_12_SettingsViewModel_PomodorosToLongBreak;
                xamlMember.Setter = set_12_SettingsViewModel_PomodorosToLongBreak;
                break;
            case "PomodoroAssistant.ViewsModels.SettingsViewModel.IsMuteSound":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.SettingsViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "IsMuteSound", "Boolean");
                xamlMember.Getter = get_13_SettingsViewModel_IsMuteSound;
                xamlMember.Setter = set_13_SettingsViewModel_IsMuteSound;
                break;
            case "PomodoroAssistant.ViewsModels.SettingsViewModel.IsAutoContinue":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewsModels.SettingsViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "IsAutoContinue", "Boolean");
                xamlMember.Getter = get_14_SettingsViewModel_IsAutoContinue;
                xamlMember.Setter = set_14_SettingsViewModel_IsAutoContinue;
                break;
            case "PomodoroAssistant.Views.TasksPage.SectionWidth":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.Views.TasksPage");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "SectionWidth", "Int32");
                xamlMember.Getter = get_15_TasksPage_SectionWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.Views.TasksPage.SectionHeight":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.Views.TasksPage");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "SectionHeight", "Int32");
                xamlMember.Getter = get_16_TasksPage_SectionHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.CurrentSettings":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "CurrentSettings", "Atrx.Mobile.Windows.Pomodoro.Settings.PomodoroSettings");
                xamlMember.Getter = get_17_TimerViewModel_CurrentSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.CurrentTime":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "CurrentTime", "TimeSpan");
                xamlMember.Getter = get_18_TimerViewModel_CurrentTime;
                xamlMember.Setter = set_18_TimerViewModel_CurrentTime;
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.CurrentSecond":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "CurrentSecond", "String");
                xamlMember.Getter = get_19_TimerViewModel_CurrentSecond;
                xamlMember.Setter = set_19_TimerViewModel_CurrentSecond;
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.CurrentMinutes":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "CurrentMinutes", "String");
                xamlMember.Getter = get_20_TimerViewModel_CurrentMinutes;
                xamlMember.Setter = set_20_TimerViewModel_CurrentMinutes;
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.TotalTime":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "TotalTime", "TimeSpan");
                xamlMember.Getter = get_21_TimerViewModel_TotalTime;
                xamlMember.Setter = set_21_TimerViewModel_TotalTime;
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.LongBreakAfter":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "LongBreakAfter", "Int32");
                xamlMember.Getter = get_22_TimerViewModel_LongBreakAfter;
                xamlMember.Setter = set_22_TimerViewModel_LongBreakAfter;
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.DailyTarget":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "DailyTarget", "Int32");
                xamlMember.Getter = get_23_TimerViewModel_DailyTarget;
                xamlMember.Setter = set_23_TimerViewModel_DailyTarget;
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.PomodoroStateText":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "PomodoroStateText", "String");
                xamlMember.Getter = get_24_TimerViewModel_PomodoroStateText;
                xamlMember.Setter = set_24_TimerViewModel_PomodoroStateText;
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.CurrentTimerState":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "CurrentTimerState", "Atrx.Mobile.Windows.Pomodoro.PomodoroTimer.TimerStates");
                xamlMember.Getter = get_25_TimerViewModel_CurrentTimerState;
                xamlMember.Setter = set_25_TimerViewModel_CurrentTimerState;
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.TimerStartCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "TimerStartCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_26_TimerViewModel_TimerStartCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.TimerPauseCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "TimerPauseCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_27_TimerViewModel_TimerPauseCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.TimerStopCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "TimerStopCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_28_TimerViewModel_TimerStopCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.ResetLongBreakAfterCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "ResetLongBreakAfterCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_29_TimerViewModel_ResetLongBreakAfterCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.ViewModels.TimerViewModel.ResetDailyTargetCommand":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.ViewModels.TimerViewModel");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "ResetDailyTargetCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_30_TimerViewModel_ResetDailyTargetCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.Views.TimerPage.SectionWidth":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.Views.TimerPage");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "SectionWidth", "Int32");
                xamlMember.Getter = get_31_TimerPage_SectionWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "PomodoroAssistant.Views.TimerPage.SectionHeight":
                userType = (global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PomodoroAssistant.Views.TimerPage");
                xamlMember = new global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlMember(this, "SectionHeight", "Int32");
                xamlMember.Getter = get_32_TimerPage_SectionHeight;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlSystemBaseType
    {
        global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::PomodoroAssistant.PomodoroAssistant_4_Prototype_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

